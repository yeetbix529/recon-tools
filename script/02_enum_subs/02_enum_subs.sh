#!/bin/bash

# === module: 02_enum_subs.sh ===
# Description:
# Enumerates subdomains from the scope file generated by 01_get_scope.sh
# using subfinder.
#

# === step 0: input arguments and validation
TARGET="$1"
BASE_DIR="/home/kali/bugBounty/bugBounty_v2"
SCOPE_FILE="$BASE_DIR/recon/$TARGET/${TARGET}_scope.txt"
OUTPUT_DIR="$BASE_DIR/recon/$TARGET/subdomains"
CLEANED_OOS=$(mktemp)

if [ -z "$TARGET" ]; then
	echo "Usage: $0 <target-name>"
	echo "Example: 02_enum_subs.sh NBA Public Bug Bounty"
	exit 1
fi

mkdir -p "$BASE_DIR/recon/$TARGET"
mkdir -p "$BASE_DIR/recon/$TARGET/subdomains"

if [ ! -f "$SCOPE_FILE" ]; then
	echo "[!] Scope file not found: $SCOPE_FILE"
	exit 1
fi

echo "[*] Extracting domains from: $SCOPE_FILE"

# === step 1:  extract and sanitise url's
domains=$(cat "$SCOPE_FILE" |
   sed -E 's|https?://||; s|/.*||; s/^\*\.//' |
   grep -Eo '([a-z0-9-]+\.)+[a-z]{2,}' |
   sort -u)
echo "[*] Found $(echo "$domains" | wc -l) unique root domains."

# === step 2: passive enumeration
echo "[*] Starting passive enumeration..."
> "$OUTPUT_DIR/passive_raw.txt"

for domain in $domains; do
	echo "[*] Enumerating $domain.."
	
	# subfinder
	subfinder -d "$domain" -silent -exclude-sources digitorus >> "$OUTPUT_DIR/passive_raw.txt"
done

# === step 3: remove duplicate results
sort -u "$OUTPUT_DIR/passive_raw.txt" > "$OUTPUT_DIR/passive.txt"

#echo "[+] Passive subdomains saved to $OUTPUT_DIR/passive.txt"

# === step 4: check against out_of_scope.sh
IN_SCOPE="$OUTPUT_DIR/passive.txt"
OUT_SCOPE="$BASE_DIR/recon/$TARGET/${TARGET}_out_of_scope.txt"
OUTPUT="$OUTPUT_DIR/filtered.txt"

if [[ ! -f "$IN_SCOPE" || ! -f "$OUT_SCOPE" ]]; then
	echo "[!] Missing required file(s)."
	exit 1
fi

cat "$OUT_SCOPE" | sed 's/^\*\.\?//' | sort -u > "$CLEANED_OOS"

grep -vFf "$CLEANED_OOS" "$IN_SCOPE" > "$OUTPUT"

rm "$CLEANED_OOS"
rm "$OUTPUT_DIR/passive.txt"
echo "[+] filtered subdomains saved to $OUTPUT"

